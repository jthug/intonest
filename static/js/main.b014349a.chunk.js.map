{"version":3,"sources":["head/Head.jsx","constant.js","utils/web3Util.js","nestTap.js","content/Content.jsx","foot/Foot.jsx","Home.jsx","App.js","serviceWorker.js","faqs/index.jsx","Router.jsx","index.js"],"names":["Head","className","src","alt","to","INFURA_NET","web3Instance","Web3","constant","nestTap","eth","Contract","inputs","payable","stateMutability","type","internalType","name","outputs","contractAbi","contractAddress","Content","useState","_receiveNest","set_receiveNest","_receiveTimes","set_receiveTimes","_receiveAddress","set_receiveAddress","canGetNest","setCanGetNest","invitorAddress","setInvitorAddress","_firstReceive","set_firstReceive","copyVisibility","setCopyVisibility","useEffect","window","ethereum","alert","methods","getStatistics","call","then","result","getInfo","_latestBlock","getBlockNumber","blockDiff","web3","currentProvider","console","log","contract","at","err","res","JSON","stringify","style","backgroundImage","onChange","e","target","value","color","visibility","onClick","copy","selectedAddress","fontStyle","fontSize","marginTop","textAlign","a","async","enable","invitationReceive","normalReceive","click","fromWei","href","Foot","Home","App","props","children","Boolean","location","hostname","match","faqs","margin","router","exact","path","component","Faqs","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b014349a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./head.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Head() {\n  return (\n    <div className=\"head\">\n      <img className=\"div-left\" src=\"./assets/ic_tap.png\" alt=\"\" />\n      <div className=\"div-right\">\n        <div className=\"faqs-bg\" />\n        <NavLink\n          className=\"faqs\"\n          to=\"/faqs\"\n        >\n          FAQs\n        </NavLink>\n      </div>\n    </div>\n  );\n}\n\nexport default Head;\n","export default {\n    INFURA_NET:\"https://mainnet.infura.io/v3/ad670fd33ebc42f89befc52283fa6a00\"\n}","import Web3 from \"web3\";\nimport constant from \"../constant\";\n\nfunction web3Instance() {\n\n    const web3 = new Web3(constant.INFURA_NET)\n    return web3\n};\n\nexport default web3Instance\n","\nimport Web3 from \"web3\";\nconst contractAbi = [\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"num\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeAmountLimit\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"num\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeBlockAmount\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"num\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeBlockInterval\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"checkAmountLimit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"checkBlockAmount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"checkBlockInterval\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"checkOwner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getInfo\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"_firstReceive\",\n        type: \"bool\"\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_latestTime\",\n        type: \"uint256\"\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_blockAmount\",\n        type: \"uint256\"\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_latestBlock\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getStatistics\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_receiveNest\",\n        type: \"uint256\"\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_receiveTimes\",\n        type: \"uint256\"\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_receiveAddress\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"code\",\n        type: \"address\"\n      }\n    ],\n    name: \"invitationReceive\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"normalReceive\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n];\n\n// if(typeof web3 !=='undefined'){\n\n// }\nconst web3 = new Web3(\"https://mainnet.infura.io/v3/648e6b8ae3dc453c8acf664519577c6b\")\nconst contractAddress = \"0x89E5A1459981318FFb1E933B5294145024E94941\";\n\nlet nestTap = new web3.eth.Contract(contractAbi, contractAddress);\nexport default nestTap;","import React, { useState, useEffect } from \"react\";\nimport \"./content.scss\";\nimport web3Instance from \"../utils/web3Util\";\nimport nestTap from \"../nestTap\";\nimport Web3 from \"web3\";\nimport copy from \"copy-to-clipboard\";\nconst contractAbi = [\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"num\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeAmountLimit\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"num\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeBlockAmount\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"num\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeBlockInterval\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"checkAmountLimit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"checkBlockAmount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"checkBlockInterval\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"checkOwner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getInfo\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"_firstReceive\",\n        type: \"bool\"\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_latestTime\",\n        type: \"uint256\"\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_blockAmount\",\n        type: \"uint256\"\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_latestBlock\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getStatistics\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_receiveNest\",\n        type: \"uint256\"\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_receiveTimes\",\n        type: \"uint256\"\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_receiveAddress\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"code\",\n        type: \"address\"\n      }\n    ],\n    name: \"invitationReceive\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"normalReceive\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n];\n\nconst contractAddress = \"0x89E5A1459981318FFb1E933B5294145024E94941\";\n\nfunction Content() {\n  const [_receiveNest, set_receiveNest] = useState(0);\n  const [_receiveTimes, set_receiveTimes] = useState(0);\n  const [_receiveAddress, set_receiveAddress] = useState(0);\n  const [canGetNest, setCanGetNest] = useState(0);\n  const [invitorAddress, setInvitorAddress] = useState(\"\");\n  const [_firstReceive, set_firstReceive] = useState();\n  const [copyVisibility, setCopyVisibility] = useState(\"hidden\");\n\n  useEffect(() => {\n    if (typeof window.ethereum === \"undefined\") {\n      // alert(\"Looks like you need a Dapp browser to get started.\");\n      alert(\"检测到您未安装MateMask,请前往安装\");\n      nestTap.methods\n        .getStatistics()\n        .call()\n        .then(function(result) {\n          set_receiveAddress(result._receiveAddress);\n          set_receiveTimes(result._receiveTimes);\n          set_receiveNest(result._receiveNest);\n        });\n\n      nestTap.methods\n        .getInfo()\n        .call()\n        .then(function(result) {\n          const _latestBlock = result._latestBlock; //上次领取区块\n          const _firstReceive = result._firstReceive; //是否是首次领取\n          set_firstReceive(_firstReceive);\n          web3Instance()\n            .eth.getBlockNumber()\n            .then(function(result) {\n              let blockDiff = result - _latestBlock;\n              setCanGetNest(blockDiff * 8 > 100 ? 100 : blockDiff * 8);\n            });\n        });\n    } else {\n      // let accounts = window.ethereum.enable()\n      const web3 = new Web3(window.web3.currentProvider);\n      console.log(\"开始请求数据 \");\n      let nestTap = new web3.eth.Contract(contractAbi, contractAddress);\n\n      nestTap.methods\n        .getStatistics()\n        .call()\n        .then(function(result) {\n          set_receiveAddress(result._receiveAddress);\n          set_receiveTimes(result._receiveTimes);\n          set_receiveNest(result._receiveNest);\n        });\n\n      window.web3.eth\n        .contract(contractAbi)\n        .at(contractAddress)\n        .getInfo((err, res) => {\n          const _latestBlock = res[3]; //上次领取区块\n          const _firstReceive = res[0]; //是否是首次领取\n          console.log(\"数据：\" + JSON.stringify(res));\n          set_firstReceive(_firstReceive);\n          web3Instance()\n            .eth.getBlockNumber()\n            .then(function(result) {\n              let blockDiff = result - _latestBlock;\n              console.log(\n                \"当前区块高度：\" +\n                  result +\n                  \" 上次区块高度\" +\n                  _latestBlock +\n                  \"第一次领取： \" +\n                  _firstReceive\n              );\n              setCanGetNest(blockDiff * 8 > 100 ? 100 : blockDiff * 8);\n            });\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"content\">\n      <div className=\"donate-address\">\n        <img className=\"donate-icon\" src=\"./assets/ic_donate.png\" alt=\"\" />\n        <p className=\"donate-text\">NEST 捐赠地址：{contractAddress}</p>\n        <img className=\"donate-icon\" src=\"./assets/ic_donate.png\" alt=\"\" />\n      </div>\n      <div className=\"content-middle\">\n        <div className=\"middle-left\">\n          <div className=\"middle-left-title\">\n            <img className=\"icon\" src=\"./assets/ic_question.png\" alt=\"\" />\n            <span className=\"title\">什么是 NEST Protocol ?</span>\n          </div>\n          <p>\n            <span>NEST protocol </span>\n            是一个分布式价格预言机网络，于2018年12月在以太坊主网上线。\n          </p>\n          <p>\n            其采用独特的 “报价挖矿”\n            机制来保证链下价格事实同步产生于链上，解决了区块链领域链上价格事实缺失的行业性问题。NEST-Price\n            价格数据具有真实性、时效性、安全性、稳定性等特点，可供 DeFi\n            产品直接引用，为开发者完成产品自身的逻辑闭环提供了链上价格事实依据；NEST\n            Protocol 预言机网络作为 Web3.0\n            时代最为重要的基础设施，将在推动区块链技术落地应用过程中产生巨大作用。\n          </p>\n\n          <div className=\"middle-left-title\">\n            <img className=\"icon\" src=\"./assets/ic_question.png\" alt=\"\" />\n            <span className=\"title\">什么是 NEST DAPP ?</span>\n          </div>\n\n          <p>\n            <span>NEST DAPP </span>\n            是一款基于以太坊开发的去中心化智能合约交互工具。\n          </p>\n          <p>\n            现已上线 NEST 预言机报价挖矿服务和 NEST\n            去中心化抵押借贷产品（支持抵押 ETH 借 USDT 资产）。未来，NEST DAPP\n            将会上线更多的基于 NEST 预言机开发的 DeFi\n            产品和服务，为全球区块链用户和从业者提供服务。\n          </p>\n        </div>\n\n        <div className=\"middle-right\">\n          <div className=\"middle-right-top\">\n            <div className=\"bg\" />\n            <img className=\"icon\" src=\"./assets/ic_key.png\" alt=\"\" />\n            <span className=\"title\">领取 NEST</span>\n          </div>\n\n          <div className=\"amount-wrap\">\n            <div\n              className=\"amount\"\n              style={{ backgroundImage: \"url('./assets/ic_can_get.png')\" }}\n            >\n              <p>当前可领取 NEST</p>\n              <span>{canGetNest}</span>\n            </div>\n          </div>\n          <form>\n            输入邀请人地址\n            <br /> <br />\n            <input\n              onChange={e => {\n                setInvitorAddress(e.target.value);\n              }}\n            />\n            <p>\n              有邀请地址且未被使用，领取人能获取当前全部 NEST，邀请人额外奖励\n              50%； 若没有邀请地址，或邀请地址已被使用，领取人最多只能获取 100\n              NEST\n            </p>\n            <div className=\"invite\">\n              <div>\n                我的邀请权限：\n                <span\n                  className=\"active\"\n                  style={{ color: _firstReceive ? \"#6666FF\" : \"#FF6666\" }}\n                >\n                  {_firstReceive ? \"已激活\" : \"首次领取后激活\"}\n                </span>\n              </div>\n              <div style={{ visibility: _firstReceive ? \"visible\" : \"hidden\" }}>\n                <div\n                  className=\"copy\"\n                  onClick={() => {\n                    copy(\n                      \"我的邀请地址是：\" +\n                        window.ethereum.selectedAddress +\n                        \"，快来 NEST 智能合约水龙头免费领取 NEST Token 吧。填写我的邀请地址，NEST 领取数量翻倍哦！水龙头网站：https://nestfans.github.io/intonest/\"\n                    );\n                    setCopyVisibility(\"visible\");\n                  }}\n                >\n                  <span className=\"text\"> 邀请好友</span>\n                </div>\n                <span\n                  style={{\n                    color: \"#6666FF\",\n                    fontStyle: \"italic\",\n                    fontSize: \"14px\",\n                    marginTop: \"20px\",\n                    visibility: copyVisibility\n                  }}\n                >\n                  已复制到剪切板\n                </span>\n              </div>\n            </div>\n            <div style={{ textAlign: \"center\", marginTop: \"30px\" }}>\n              <button onClick={() => click(window, invitorAddress)}>\n                领取\n              </button>\n            </div>\n            {/* <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\n              <a href=\"www.baidu.com\">如何安装MateMask ?</a>\n            </div> */}\n          </form>\n        </div>\n      </div>\n      <div className=\"content-bottom\">\n        <div className=\"left\">\n          <div className=\"item\">\n            <img src=\"./assets/ic_left.png\" alt=\"\" />\n            <p>累计发放 NEST</p>\n            <span>{window.web3.fromWei(_receiveNest, \"ether\")}</span>\n          </div>\n          <div className=\"item\">\n            <img src=\"./assets/ic_middle.png\" alt=\"\" />\n            <p>累计领取次数</p>\n            <span>{_receiveTimes}</span>\n          </div>\n          <div className=\"item\">\n            <img src=\"./assets/ic_right.png\" alt=\"\" />\n            <p>领取地址数量</p>\n            <span>{_receiveAddress}</span>\n          </div>\n        </div>\n        <div className=\"line\" />\n        <div className=\"right\">\n          <div>\n            <a href=\"https://twitter.com/NestCore\" target=\"view_window\">\n              Twitter\n            </a>\n            <a href=\"https://t.me/nestdapp_en\" target=\"view_window\">\n              Telegram（EN）\n            </a>\n            <a href=\"https://www.nestfans.com/\" target=\"view_window\">\n              Nest Fans\n            </a>\n          </div>\n          <div>\n            <a href=\"https://github.com/NestProtocol\" target=\"view_window\">\n              GitHub\n            </a>\n            <a href=\"https://t.me/nestdapp_cn\" target=\"view_window\">\n              Telegram（CN）\n            </a>\n            <a href=\"https://nestdapp.io/\" target=\"view_window\">\n              NEST DAPP\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nasync function click(window, invitorAddress) {\n  const accounts = await window.ethereum.enable();\n  // let data = {\n  //   name:\"normalReceive()\"\n  // }\n\n  // let hexData = window.web3.toHex(data)\n\n  // let params = {\n  //   from:window.ethereum.selectedAddress,\n  //   to:contractAddress,\n  //   data:\"0x6783ba77\"\n  // }\n  // window.ethereum.sendAsync(\n  //   {\n  //     method: 'eth_sendTransaction',\n  //     params: [params],\n  //     from:window.ethereum.selectedAddress\n  //   },\n  //   function(err,res){\n  //     // alert(\"sss\")\n  //   }\n  // )\n\n  if (invitorAddress !== \"\") {\n    window.web3.eth\n      .contract(contractAbi)\n      .at(contractAddress)\n      .invitationReceive(invitorAddress);\n  } else {\n    window.web3.eth\n      .contract(contractAbi)\n      .at(contractAddress)\n      .normalReceive();\n  }\n}\nexport default Content;\n","import React from \"react\"\nimport \"./foot.scss\"\nfunction Foot(){\n    return <div className=\"foot\">\n        <div className=\"left-text\">\n            <span className=\"span-title\">免责声明</span>\n            <span className=\"span-text\">NEST 智能合约水龙头由 Nest 爱好者发起，仅供推广 NEST 分布式价格预言机使用</span>\n            <span className=\"span-text\">用户在使用 NEST 智能合约水龙头过程中所出现的任何风险均由用户自行承担，与 NEST 爱好者无关</span>\n            <span className=\"span-text\">如不认同该声明，请立刻停止操作，关闭 NEST 智能合约水龙头网站，多谢理解和支持</span>\n        </div>\n        <div>\n        <img className=\"qr-code\" src=\"./assets/ic_qrcode.png\" alt=\"\"/>\n        <br/>\n        <span style={{fontSize:\"14px\"}}>NEST 捐赠地址</span>\n        </div>\n        \n        \n    </div>\n}\nexport default Foot","import React from 'react';\nimport './Home.css';\nimport Head from \"./head/Head\"\nimport Content from \"./content/Content\"\nimport Foot from \"./foot/Foot\"\nfunction Home(){\n    return (\n        <div className=\"container\">\n          <Head/>\n          <Content/>\n          <Foot/>\n        </div>\n      );\n}\n\nexport default Home","import React from 'react';\nimport Home from './Home';\n// import './App.css';\n// import Head from \"./head/Head\"\n// import Content from \"./content/Content\"\n// import Foot from \"./foot/Foot\"\nfunction App(props) {\n  return (\n    <div>\n      {props.children}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\nfunction faqs() {\n  return (\n    <div style={{ margin: \"20px\" }}>\n      <h4>Q1. NEST 领取规则是怎样的？</h4>\n      <p>\n        A：在浏览器中安装\n        MetaMask（https://metamask.io/）插件，导入自己的以太坊钱包；然后填写邀请地址，发起“NEST领取”交易，交易成功之后，NEST\n        就领取成功了。\n      </p>\n      <h5>领取 NEST 数量计算：</h5>\n      <p>\n        1、距离上次被领取，每个以太坊区块中包含 8 枚NEST，最多累积 25\n        个区块奖励： 200 NEST。\n      </p>\n      <p>2、每领取成功一次，区块累计会重新开始计算。</p>\n      <p>\n        3、如果不填写邀请地址，则领取数额减半。举例：假设你可以领取 200\n        NEST，由于没有填写邀请地址，则只能领取 100 NEST。\n      </p>\n      <p>4、每个钱包地址每隔 2万个以太坊区块，可以再次参与 NEST 水龙头领取。</p>\n      <h4>Q2. 邀请规则是怎样的？</h4>\n      <p>\n        A：新用户在第一次领取 NEST\n        成功之后，其钱包地址会自动成为可邀请地址，永久有效。我们可以把 NEST\n        智能合约水龙头介绍给其他人，当别人在第一次使用 NEST\n        水龙头的时候，可以填写我们的邀请地址，被邀请人领取成功的同时也会触发邀请奖励，邀请人可以获得被邀请人领取\n        NEST 数量 50% 的额外 NEST 奖励。举例：假设你成功邀请好友使用了 NEST\n        水龙头，他领了 200 NEST，那么你可以额外获取 100 NEST\n        的邀请奖励。一个邀请地址，可以邀请不限数量的多人，希望更多人能够传播\n        NEST 水龙头，获取 NEST 奖励！\n      </p>\n      <h4>Q3. NEST Token 有什么用途？</h4>\n      <p>\n        A：NEST Token 是基于以太坊 ERC20 协议发现的 Token，总量为 100\n        亿枚，全部通过 NEST 预言机报价挖矿系统释放流通，无预留、无预挖、无ICO。\n      </p>\n      <h5>NEST Token 用途：</h5>\n      <p>\n        1、持有 NEST 可以每周参与 NEST\n        系统手续费分红，持有占比越多，分红收益越多；\n      </p>\n      <p>2、持有 NEST 可以参与 NEST 社区治理，参与投票；</p>\n      <p>3、还有更多…</p>\n      <h4>Q5.如何加入 NEST 社群？</h4>\n      <p>A：欢迎大家通过以下方式加入 NEST 爱好者社群</p>\n      <p>\n        Telegram：<a href=\"https://t.me/nestdapp_cn\">https://t.me/nestdapp_cn</a> <br/>\n        Twitter：<a href=\"https://twitter.com/NestCore\">https://twitter.com/NestCore</a> <br/>\n        HuobiChat：搜索 NEST Protocol Wechat：inBlock NEST<br/>\n        Fans：<a href=\"https://www.nestfans.com/\">https://www.nestfans.com/</a>\n      </p>\n    </div>\n  );\n}\n\nexport default faqs;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\nimport Faqs from \"./faqs\";\nimport Home from \"./Home\";\n\nfunction router() {\n  return (\n    <HashRouter>\n      <App>\n        <Route exact=\"true\" path=\"/\" component={Home}/>\n        <Route path=\"/faqs\" component={Faqs}/>\n      </App>\n\n      {/* <Switch>\n        <Route exect path=\"/\" component={App} />\n        <Route path=\"/faqs\" component={Faqs} />\n      </Switch> */}\n    </HashRouter>\n  );\n}\n\nexport default router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Route from \"./Router\"\nReactDOM.render(<Route />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}